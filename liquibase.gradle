//import org.liquibase.gradle.LiquibaseTask

// Файл для генерации changeLog с помощью Liquibase gradle plugin

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.liquibase:liquibase-gradle-plugin:2.0.1"
        classpath "org.liquibase:liquibase-core:3.6.3"
    }
}


dependencies {
    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.3'
    liquibaseRuntime 'org.postgresql:postgresql:42.2.9'
    liquibaseRuntime 'com.h2database:h2:1.4.197'
    liquibaseRuntime sourceSets.main.output
}

//tag (type: JavaExec) {
//        def requiresValue = true
//    exec {}
//    }

//task runApp1(type: JavaExec) {
//    classpath = org.liquibase.gradle.Activity.

//    main = 'application.Application'

    // arguments to pass to the application
//    args 'appArg1'
//}

//rollback  {
//    def requiresValue = "Two"
//}

task hello(type: JavaExec, dependsOn: tag) {

//    classpath = sourceSets.main.runtimeClasspath
//    main = javaMainClass
//    main= "org.liquibase.gradle.LiquibaseRunner"
//    main= "liquibase.integration.commandline.Main"
//    main 'org.liquibase.integration.commandline.Main'


    tag {
        requiresValue 'true'
//        command 'dbDoc'
//        classpath = sourceSets.main.runtimeClasspath
//        main = 'org.liquibase.gradle.'
//        requiresValue 'true'
//        main = project.hasProperty("mainClass") ? getProperty("mainClass") : "NULL"
//
//        command 'liquibaseCommandValue=5'
//        requiresValue 'five'
        args 'five'
    }

}

//task(runJavaExecNormal, dependsOn: 'classes', type: JavaExec) {
//    main = 'com.examples.AllJvmArgumentsInJavaExecBug'
//    main = 'package.Main'
//
//    // arguments to pass to the application
//    args 'appArg1'
//    classpath = sourceSets.main.runtimeClasspath
//
//}

task cucumber() {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime
            args = ['--plugin', 'pretty', '--glue', 'src/test/groovy', 'src/test/resources']

        }
}


liquibase {

    tag {
//        command = 'hiu'
        requiresValue 'true'
//        args 'appArg1'
////        args = 'appArg1'
////        requiresValue 'true'
        args('five')
    }

    activities {



//main function for Postgres DB
        main {
            driver 'org.postgresql.Driver'
            url 'jdbc:postgresql://localhost:5432/onlineshop'
            username 'postgres'
            password 'root'
            changeLogFile 'src/main/resources/changelogs/liquibase-changeLog-master.xml' // файл который будет сгенерирован
        }



//main function for H2 DB

//        main {
//            driver 'org.h2.Driver'
//            url 'jdbc:h2:mem:testdb'
//            username 'test'
//            password 'test'
//            changeLogFile 'src/main/resources/changelogs/liquibase-changeLog.xml' // файл который будет сгенерирован
//        }
    }

}

